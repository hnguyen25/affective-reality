{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Affective Reality About Affective reality is a Stanford BCI project which seeks to use biometric data to recognize one's emotional and focused state, and then use this to inform a virtual reality environment--whether that be a meditation app whose environment and soundscape changes depending on mood and relaxation, or an education app that monitors focus to increase learning outcomes. The end goal is to create a closed loop, bi-directional system wherein one's mental states influences the VR environment, and conversely, the VR environment influences one's mental state. Github Repo Link","title":"Introduction"},{"location":"#affective-reality","text":"","title":"Affective Reality"},{"location":"#about","text":"Affective reality is a Stanford BCI project which seeks to use biometric data to recognize one's emotional and focused state, and then use this to inform a virtual reality environment--whether that be a meditation app whose environment and soundscape changes depending on mood and relaxation, or an education app that monitors focus to increase learning outcomes. The end goal is to create a closed loop, bi-directional system wherein one's mental states influences the VR environment, and conversely, the VR environment influences one's mental state.","title":"About"},{"location":"#github-repo","text":"Link","title":"Github Repo"},{"location":"about/","text":"","title":"About"},{"location":"emotion-classification/","text":"","title":"Emotion Classification"},{"location":"emotion-experiments/","text":"","title":"Emotion Experiments"},{"location":"getting-started/","text":"","title":"Getting Started"},{"location":"home/","text":"Documentation for Print print print! Examples: method_a ( self , param1 , param2 ) Example function Parameters: Name Type Description Default param1 int test param required param2 str test param2 required Returns: Type Description bool the return value method_b ( self ) Print B! method_c ( self ) Print C!","title":"My page"},{"location":"home/#documentation-for","text":"Print print print! Examples:","title":"Documentation for"},{"location":"home/#emotion-classification.src.test.TestClass.method_a","text":"Example function Parameters: Name Type Description Default param1 int test param required param2 str test param2 required Returns: Type Description bool the return value","title":"method_a()"},{"location":"home/#emotion-classification.src.test.TestClass.method_b","text":"Print B!","title":"method_b()"},{"location":"home/#emotion-classification.src.test.TestClass.method_c","text":"Print C!","title":"method_c()"},{"location":"models/","text":"","title":"Models"},{"location":"modules/","text":"","title":"Modules"},{"location":"user-api/","text":"","title":"User api"},{"location":"vr-app/","text":"","title":"Real-Time Application"}]}